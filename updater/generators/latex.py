# LaTeX generator
#
# @author Daniel J. Finnegan
# @date April 2018

import os               #open os file
from os import path     #open path from os file
import logging          #open logging file
from logging import handlers    #open hamdlers from logging
import generators.base_gen as base_gen  #open generators.base_gen as a base_gen file (not 100% positive)

class LatexGenerator(base_gen.ProjectGenerator):    #this is a class called LatexGenerator

    def __init__(self, proj_root):      #function   #self - presents the object 
        super(LatexGenerator, self).__init__(proj_root) #super keyword will interact with base_gen.Projectgenerator. 
        self.template_name = 'latex.txt'    #latext.txt is the template name
        self.template_key['projname'] =  'LaTeX-Updater-Project'   #template key is ...
        self.template_key['appname'] =  'DanDan\'s-Application'    #""
        self.template_key['proj_languages'] = 'NONE'               #""

    def write_sample_source_file(self): #another function which doesnt interact with the first
        os.mkdir(os.path.join(self.project_root, 'src'))
        file_contents = (
            '%%\n'
            '%% Automatically generated by Updater v' + str(self.template_keys['version_number']) + '\n'
            '%% @author ' + self.template_key['author_name'] + '\n'
            '%%\n'
            '\n'
            '\\documentclass{article}\n'
            '\n'
            '\\begin{document}\n'
            'Hello World\n'
            '\\end{document}\n'
        )   #variable containing all this

        with open(os.path.join(self.project_root, 'src', 'main.tex'), 'w') as sample_source:
            sample_source.write(file_contents)

###########################################################
